1.	Identify the aspects of your application that vary and separate them from what stays the same
2.	Program to an interface, not an implementation
3.	Favor composition over interface
4.	Strive for loosely coupled design between objects that interact
5.	Classes should be open for extension, but closed for modification
6.	Depend upon abstraction; do not depend upon concrete classes
7.	Don’t call us, we will call you
8.	A class should have only one reason to change